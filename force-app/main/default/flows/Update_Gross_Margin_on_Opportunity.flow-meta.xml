<?xml version="1.0" encoding="UTF-8"?>
<Flow xmlns="http://soap.sforce.com/2006/04/metadata">
    <apiVersion>59.0</apiVersion>
    <decisions>
        <name>Check_the_Record_type_Of_Opportunity</name>
        <label>Check the Record type Of Opportunity</label>
        <locationX>314</locationX>
        <locationY>431</locationY>
        <defaultConnectorLabel>Default Outcome</defaultConnectorLabel>
        <rules>
            <name>IF_Repeater</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>get_Opportunity.RecordType.DeveloperName</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <stringValue>Repeater</stringValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>update_VAT_on_OpportunityLineitem</targetReference>
            </connector>
            <label>IF Repeater</label>
        </rules>
        <rules>
            <name>IF_Runner</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>get_Opportunity.RecordType.DeveloperName</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <stringValue>Runner</stringValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>get_Product_record</targetReference>
            </connector>
            <label>IF Runner</label>
        </rules>
    </decisions>
    <environments>Default</environments>
    <formulas>
        <name>BundlePriceWithQuantity</name>
        <dataType>Currency</dataType>
        <expression>{!$Record.Final_Bundle_Price_with_VAT__c}* {!$Record.Quantity}</expression>
        <scale>2</scale>
    </formulas>
    <formulas>
        <name>FinalBundlePrice</name>
        <dataType>Currency</dataType>
        <expression>{!$Record.Bundle_Price_With_TAX__c} + {!$Record.TPC_Val__c}</expression>
        <scale>2</scale>
    </formulas>
    <formulas>
        <name>GrossProfitAmount</name>
        <dataType>Currency</dataType>
        <expression>(({!$Record.Price_without_GP__c})*( {!$Record.Gross_Profit__c} / (100 -{!$Record.Gross_Profit__c} )))</expression>
        <scale>2</scale>
    </formulas>
    <formulas>
        <name>PriceWithVAT</name>
        <dataType>Currency</dataType>
        <expression>{!$Record.Final_Bundle_Price__c} + {!$Record.VAT_Amount__c}</expression>
        <scale>2</scale>
    </formulas>
    <interviewLabel>Update Gross Margin on Opportunity {!$Flow.CurrentDateTime}</interviewLabel>
    <label>Update Price with VAT on opportunitylineitem</label>
    <processMetadataValues>
        <name>BuilderType</name>
        <value>
            <stringValue>LightningFlowBuilder</stringValue>
        </value>
    </processMetadataValues>
    <processMetadataValues>
        <name>CanvasMode</name>
        <value>
            <stringValue>AUTO_LAYOUT_CANVAS</stringValue>
        </value>
    </processMetadataValues>
    <processMetadataValues>
        <name>OriginBuilderType</name>
        <value>
            <stringValue>LightningFlowBuilder</stringValue>
        </value>
    </processMetadataValues>
    <processType>AutoLaunchedFlow</processType>
    <recordLookups>
        <name>get_Opportunity</name>
        <label>get Opportunity</label>
        <locationX>314</locationX>
        <locationY>323</locationY>
        <assignNullValuesIfNoRecordsFound>false</assignNullValuesIfNoRecordsFound>
        <connector>
            <targetReference>Check_the_Record_type_Of_Opportunity</targetReference>
        </connector>
        <filterLogic>and</filterLogic>
        <filters>
            <field>Id</field>
            <operator>EqualTo</operator>
            <value>
                <elementReference>$Record.OpportunityId</elementReference>
            </value>
        </filters>
        <getFirstRecordOnly>true</getFirstRecordOnly>
        <object>Opportunity</object>
        <storeOutputAutomatically>true</storeOutputAutomatically>
    </recordLookups>
    <recordLookups>
        <name>get_Product_record</name>
        <label>get Product record</label>
        <locationX>314</locationX>
        <locationY>539</locationY>
        <assignNullValuesIfNoRecordsFound>false</assignNullValuesIfNoRecordsFound>
        <connector>
            <targetReference>update_price_on_lineitem</targetReference>
        </connector>
        <filterLogic>and</filterLogic>
        <filters>
            <field>Id</field>
            <operator>EqualTo</operator>
            <value>
                <elementReference>$Record.Product2.Id</elementReference>
            </value>
        </filters>
        <getFirstRecordOnly>true</getFirstRecordOnly>
        <object>Product2</object>
        <storeOutputAutomatically>true</storeOutputAutomatically>
    </recordLookups>
    <recordUpdates>
        <name>Calculate_Price_with_VAT_on_Lineitem</name>
        <label>Calculate Price with VAT on Lineitem</label>
        <locationX>50</locationX>
        <locationY>755</locationY>
        <inputAssignments>
            <field>Final_Bundle_Price_with_VAT__c</field>
            <value>
                <elementReference>PriceWithVAT</elementReference>
            </value>
        </inputAssignments>
        <inputReference>$Record</inputReference>
    </recordUpdates>
    <recordUpdates>
        <name>update_Gross_Profit_on_Opp</name>
        <label>update Gross Profit on Opp.</label>
        <locationX>50</locationX>
        <locationY>647</locationY>
        <connector>
            <targetReference>Calculate_Price_with_VAT_on_Lineitem</targetReference>
        </connector>
        <filterLogic>and</filterLogic>
        <filters>
            <field>Id</field>
            <operator>EqualTo</operator>
            <value>
                <elementReference>get_Opportunity.Id</elementReference>
            </value>
        </filters>
        <inputAssignments>
            <field>Gross_Margin__c</field>
            <value>
                <elementReference>$Record.Gross_Profit__c</elementReference>
            </value>
        </inputAssignments>
        <object>Opportunity</object>
    </recordUpdates>
    <recordUpdates>
        <name>update_price_on_lineitem</name>
        <label>update price on lineitem</label>
        <locationX>314</locationX>
        <locationY>647</locationY>
        <inputAssignments>
            <field>Final_Price__c</field>
            <value>
                <elementReference>get_Product_record.Product_Price__c</elementReference>
            </value>
        </inputAssignments>
        <inputReference>$Record</inputReference>
    </recordUpdates>
    <recordUpdates>
        <name>update_VAT_on_OpportunityLineitem</name>
        <label>update VAT on OpportunityLineitem</label>
        <locationX>50</locationX>
        <locationY>539</locationY>
        <connector>
            <targetReference>update_Gross_Profit_on_Opp</targetReference>
        </connector>
        <inputAssignments>
            <field>Final_Bundle_Price__c</field>
            <value>
                <elementReference>FinalBundlePrice</elementReference>
            </value>
        </inputAssignments>
        <inputAssignments>
            <field>VAT__c</field>
            <value>
                <elementReference>get_Opportunity.VAT_Percentage__c</elementReference>
            </value>
        </inputAssignments>
        <inputReference>$Record</inputReference>
    </recordUpdates>
    <start>
        <locationX>188</locationX>
        <locationY>0</locationY>
        <connector>
            <targetReference>get_Opportunity</targetReference>
        </connector>
        <object>OpportunityLineItem</object>
        <recordTriggerType>CreateAndUpdate</recordTriggerType>
        <triggerType>RecordAfterSave</triggerType>
    </start>
    <status>Active</status>
</Flow>
